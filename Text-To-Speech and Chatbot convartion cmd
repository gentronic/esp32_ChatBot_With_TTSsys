
//this is code by gentronic
//tts and answering bot
#include <Arduino.h>
#include <WiFi.h>
#include <HTTPClient.h>
#include <ArduinoJson.h>
#include "Audio.h"

const char* ssid = "SSID";  // Your WiFi SSID
const char* password = "PASS";  // Your WiFi password
const char* chatgpt_token = "KEY";  // Your ChatGPT API token
const char* temperature = "0";  // Adjust as needed
const char* max_tokens = "45";  // Adjust as needed
String Question = "";  // Store the question input

// I2S Pins for audio output to PAM8403 amplifier
#define I2S_DOUT      25  // Connect to PAM8403 input
#define I2S_BCLK      27  // Bit clock pin
#define I2S_LRC       26  // Left-Right clock pin

Audio audio;

void setup() {
  Serial.begin(115200);

  // Connect to WiFi
  WiFi.mode(WIFI_STA);
  WiFi.disconnect();
  while (!Serial);
  WiFi.begin(ssid, password);
  Serial.print("Connecting to ");
  Serial.println(ssid);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.print(".");
  }
  Serial.println("connected");
  Serial.print("IP address: ");
  Serial.println(WiFi.localIP());

  // Set up the I2S interface for audio output
  audio.setPinout(I2S_BCLK, I2S_LRC, I2S_DOUT);  // I2S for audio output to PAM8403
  audio.setVolume(100);  // Set volume to maximum (adjust as needed)

  Serial.println("Audio setup completed.");
}

void loop() {
  Serial.print("Ask your Question: ");
  while (!Serial.available()) {
    audio.loop();  // Ensure the audio library can handle incoming audio requests
  }

  // Read the question from the serial monitor input
  while (Serial.available()) {
    char add = Serial.read();
    Question = Question + add;
    delay(1);
  }

  int len = Question.length();
  Question = Question.substring(0, (len - 1));  // Remove the last character (newline)
  Question = "\"" + Question + "\"";
  Serial.println("Question: " + Question);

  HTTPClient https;

  // Sending request to OpenAI's GPT API for the answer
  if (https.begin("https://api.openai.com/v1/completions")) {
    https.addHeader("Content-Type", "application/json");
    String token_key = String("Bearer ") + chatgpt_token;
    https.addHeader("Authorization", token_key);

    String payload = String("{\"model\": \"text-davinci-003\", \"prompt\": ") + Question + String(", \"temperature\": ") + temperature + String(", \"max_tokens\": ") + max_tokens + String("}");

    int httpCode = https.POST(payload);

    if (httpCode == HTTP_CODE_OK || httpCode == HTTP_CODE_MOVED_PERMANENTLY) {
      String payload = https.getString();
      DynamicJsonDocument doc(1024);
      deserializeJson(doc, payload);
      String Answer = doc["choices"][0]["text"];
      Answer = Answer.substring(2);  // Remove unnecessary characters from response
      Serial.print("Answer: ");
      Serial.println(Answer);

      // Send the answer text to speech (TTS) output via I2S (PAM8403 amplification)
      audio.connecttospeech(Answer.c_str(), "en");  // Converts text to speech
    } else {
      Serial.printf("[HTTPS] POST failed, error: %s\n", https.errorToString(httpCode).c_str());
    }
    https.end();
  } else {
    Serial.printf("[HTTPS] Unable to connect\n");
  }

  Question = "";  // Reset the question for the next input
}
